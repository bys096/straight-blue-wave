[{"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/index.js":"1","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/reportWebVitals.js":"2","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/App.js":"3","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/DefaultPage.js":"4","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/LoggedIn.js":"5","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/SignUp.js":"6","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/UpdatePage.js":"7","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/CommunityPage.js":"8","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/LoginPage.js":"9","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/ShoppingPage.js":"10","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Footer.js":"11","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Header.js":"12","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar.js":"13","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/DefaultHeader.js":"14","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/DefaultBody.js":"15","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/MainPage.js":"16","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar2.js":"17","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar3.js":"18","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar1.js":"19"},{"size":676,"mtime":1683090441062,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1683090441064,"results":"22","hashOfConfig":"21"},{"size":1070,"mtime":1683090441058,"results":"23","hashOfConfig":"21"},{"size":295,"mtime":1683090441063,"results":"24","hashOfConfig":"21"},{"size":444,"mtime":1683090441063,"results":"25","hashOfConfig":"21"},{"size":7635,"mtime":1683090441064,"results":"26","hashOfConfig":"21"},{"size":5841,"mtime":1683090441064,"results":"27","hashOfConfig":"21"},{"size":718,"mtime":1683090441063,"results":"28","hashOfConfig":"21"},{"size":2095,"mtime":1683090441063,"results":"29","hashOfConfig":"21"},{"size":745,"mtime":1683090441063,"results":"30","hashOfConfig":"21"},{"size":438,"mtime":1683090441062,"results":"31","hashOfConfig":"21"},{"size":1478,"mtime":1683090441062,"results":"32","hashOfConfig":"21"},{"size":1834,"mtime":1683090441062,"results":"33","hashOfConfig":"21"},{"size":1869,"mtime":1683090441061,"results":"34","hashOfConfig":"21"},{"size":1780,"mtime":1683090441061,"results":"35","hashOfConfig":"21"},{"size":9260,"mtime":1683111930855,"results":"36","hashOfConfig":"21"},{"size":377,"mtime":1683090441062,"results":"37","hashOfConfig":"21"},{"size":361,"mtime":1683090441062,"results":"38","hashOfConfig":"21"},{"size":356,"mtime":1683090441062,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3ivxg6",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/index.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/reportWebVitals.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/App.js",["101","102","103","104","105"],[],"import \"./App.css\";\nimport Footer from \"./components/views/Footer\";\nimport Header from \"./components/views/Header\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Signup from \"./pages/SignUp\";\nimport Update from \"./pages/UpdatePage\";\nimport Sidebar from \"./components/views/Sidebar\";\nimport DefaultPage from \"./pages/DefaultPage\";\nimport SignUp from \"./pages/SignUp\";\nimport LoggedIn from \"./pages/LoggedIn\";\nimport CommunityPage from \"./pages/CommunityPage\";\nimport ShoppingPage from \"./pages/ShoppingPage\";\nimport LoginPage from \"./pages/LoginPage\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" exact={true} Component={DefaultPage} />\n\t\t\t\t<Route path=\"/SignUp\" exact={true} Component={SignUp} />\n\t\t\t\t<Route path=\"/login\" exact={true} Component={LoginPage} />\n\t\t\t\t<Route path=\"/LoggedIn\" exact={true} Component={LoggedIn} />\n\t\t\t\t<Route path=\"/community\" exact={true} Component={CommunityPage} />\n\t\t\t\t<Route path=\"/shopping\" exact={true} Component={ShoppingPage}></Route>\n\t\t\t</Routes>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/DefaultPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/LoggedIn.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/SignUp.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/UpdatePage.js",["106","107"],[],"import React, {useState} from \"react\";\nimport {useNavigate, Link} from \"react-router-dom\";\nimport {Container, Form, Button, Alert} from \"react-bootstrap\";\n\nconst Update = () => {\n\tconst storedUser = sessionStorage.getItem(\"user\");\n\tlet storedId,\n\t\tstoredName,\n\t\tstoredBirth,\n\t\tstoredGender,\n        storedEmail,\n        storedClass = \"\";\n\n\t// sessionStorage에서 값 불러오기\n\tif (storedUser) {\n\t\tconst {user_id, user_name, gender, user_birth, user_email, user_class} = JSON.parse(storedUser);\n\t\tstoredId = user_id;\n\t\tstoredName = user_name;\n\t\tstoredGender = gender;\n\t\tstoredBirth = user_birth;\n        storedEmail = user_email;\n        storedClass = user_class;\n\t}\n\n\tconst [id, setId] = useState(storedId);\n\tconst [name, setName] = useState(storedName);\n\tconst [password, setPassword] = useState(\"\");\n\tconst [passwordCheck, setPasswordCheck] = useState(\"\");\n\tconst [term, setTerm] = useState(false);\n\tconst [passwordError, setPasswordError] = useState(false);\n\tconst [termError, setTermError] = useState(false);\n\tconst [gender, setGender] = useState(storedGender);\n    const [user_birth, setBirth] = useState(storedBirth);\n    const [user_email, setEmail] = useState(storedEmail);\n    const [user_class, setUserClass] = useState(storedClass);\n\n\tconst history = useNavigate();\n\n\t// axios 임시\n\t//  const onSubmit = async (e) => {\n\t//     e.preventDefault();\n\t//     /**검증 로직 만들기\n\t//      * 1. 비밀번호와 비밀번호 체크가 다를 경우를 검증한다\n\t//      * 2. 약관 동의를 확인한다.\n\t//      */\n\t//     if(password !== passwordCheck){\n\t//         return setPasswordError(true);\n\t//     }\n\t//     if(!term){\n\t//         return setTermError(true);\n\t//     }\n\t//     console.log({\n\t//         id,\n\t//         nick,\n\t//         password,\n\t//         passwordCheck,\n\t//         gender,\n\t//         age,\n\t//         term\n\t//     });\n\t//     try {\n\t//         const response = await axios.post('http://localhost:8080/api/signup', {\n\t//           id,\n\t//           nick,\n\t//           password,\n\t//           gender,\n\t//           age,\n\t//         });\n\n\t//         if (response.data.success) {\n\t//           sessionStorage.setItem('user', JSON.stringify(response.data.user));\n\t//           history.push('/login');\n\t//         } else {\n\t//           alert('Signup failed');\n\t//         }\n\t//       } catch (error) {\n\t//         console.error('Signup error:', error);\n\t//         alert(\"회원가입 오류!\")\n\t//       }\n\t// };\n\n\t//Submit 버튼 동작\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (password !== passwordCheck) {\n\t\t\treturn setPasswordError(true);\n\t\t}\n\t\tif (!term) {\n\t\t\treturn setTermError(true);\n\t\t}\n\t\tconsole.log({\n\t\t\tid,\n\t\t\tname,\n\t\t\tpassword,\n\t\t\tpasswordCheck,\n\t\t\tgender,\n\t\t\tuser_birth,\n\t\t\tterm,\n\t\t});\n\n\t\tsessionStorage.setItem(\n\t\t\t\"user\",\n\t\t\tJSON.stringify({id, password, name, gender, user_birth, user_class, user_email})\n\t\t);\n\n\t\tif (sessionStorage.getItem(\"user\") != null) {\n\t\t\thistory(\"/\");\n\t\t}\n\t};\n\n\t// Coustom Hook 이전\n\tconst onChangeId = (e) => {\n\t\tsetId(e.target.value);\n\t};\n\tconst onChangeName = (e) => {\n\t\tsetName(e.target.value);\n\t};\n\tconst onChangePassword = (e) => {\n\t\tsetPassword(e.target.value);\n\t};\n\tconst onChangePasswordChk = (e) => {\n\t\t//비밀번호를 입력할때마다 password 를 검증하는 함수\n\t\tsetPasswordError(e.target.value !== password);\n\t\tsetPasswordCheck(e.target.value);\n\t};\n\tconst onChangeTerm = (e) => {\n\t\t//체크박스 초기화\n\t\tsetTermError(false);\n\t\tsetTerm(e.target.checked);\n\t};\n\n\tconst onChangeGender = (e) => {\n\t\tsetGender(e.target.value);\n\t};\n\n\tconst onChangeAge = (e) => {\n\t\tsetBirth(e.target.value);\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<h1>정보 수정</h1>\n\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"user-id\">아이디</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tname=\"user-id\"\n\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={onChangeId}\n\t\t\t\t\t\treadOnly\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"user-password\">비밀번호</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tname=\"user-password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={onChangePassword}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"user-password-check\">비밀번호체크</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tname=\"user-password-check\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={passwordCheck}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={onChangePasswordChk}\n\t\t\t\t\t/>\n\t\t\t\t\t{passwordError && (\n\t\t\t\t\t\t<Alert variant=\"danger\">비밀번호가 일치하지 않습니다.</Alert>\n\t\t\t\t\t)}\n\t\t\t\t</Form.Group>\n                <Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"user-name\">이름</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tname=\"user-name\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={onChangeName}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"gender\">성별</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\tname=\"gender\"\n\t\t\t\t\t\tvalue={gender}\n\t\t\t\t\t\tonChange={onChangeGender}>\n\t\t\t\t\t\t<option value=\"male\">남성</option>\n\t\t\t\t\t\t<option value=\"female\">여성</option>\n\t\t\t\t\t</Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"user_birth\">생일</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tname=\"birth\"\n\t\t\t\t\t\tonChange={onChangeAge}\n\t\t\t\t\t\trequired></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Check\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname=\"user-term\"\n\t\t\t\t\t\tvalue={term}\n\t\t\t\t\t\tonChange={onChangeTerm}\n\t\t\t\t\t\tlabel=\"동의 합니까?\"\n\t\t\t\t\t/>\n\t\t\t\t\t{termError && (\n\t\t\t\t\t\t<Alert variant=\"danger\">약관에 동의하셔야 합니다.</Alert>\n\t\t\t\t\t)}\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button type=\"primary\" htmltype=\"submit\">\n\t\t\t\t\t정보수정\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t\t<div style={{marginTop: 10}}>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Button>홈으로 돌아가기</Button>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</Container>\n\t);\n};\n\nexport default Update;\n","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/CommunityPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/LoginPage.js",["108"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nfunction LoginPage() {\n\tconst [user_id, setUserid] = useState(\"\");\n\tconst [user_pw, setPassword] = useState(\"\");\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst response = await axios\n\t\t.post(\"http://localhost:8002/api/login\", {\n\t\t\tuser_id: user_id,\n\t\t\tuser_pw: user_pw\n\t\t})\n\t\t.then((res) => {\n\t\t\tconsole.log(\"res.data.user_id : \", res.data.user_id);\n\t\t\tconsole.log(\"res.data.user_pw : \", res.data.user_pw);\n\t\t\tif(res.data.user_id === undefined) {\n\t\t\t\talert(\"입력하신 로그인 정보가 일치하지 않습니다.\")\n\t\t\t} else if (res.data.user_id === user_id) {\n\t\t\t\tsessionStorage.setItem(\"user_id\", user_id);\n\t\t\t\talert(\"로그인 성공\")\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(error);\n\t\t})\n\t};\n\n\t/*const Login = () => {\n\t\taxios\n\t\t.post(\"http://localhost:8002/api/login\", {\n\t\t\tuser_id: user_id,\n\t\t\tuser_pw: user_pw\n\t\t})\n\t\t.then((res) => {\n\t\t\tconsole.log(\"res.data.user_id : \", res.data.user_id);\n\t\t\tconsole.log(\"res.data.user_pw : \", res.data.user_pw);\n\t\t\tif(res.data.user_id === undefined) {\n\t\t\t\talert(\"입력하신 아이디가 일치하지 않습니다.\")\n\t\t\t} else if (res.data.user_id === user_id && res.data.user_pw != user_pw) {\n\t\t\t\talert(\"입력하신 비밀번호가 일치하지 않습니다.\")\n\t\t\t} else if (res.data.user_id === user_id && res.data.user_pw === user_pw) {\n\t\t\t\tsessionStorage.setItem(\"user_id\", user_id);\n\t\t\t\talert(\"로그인 성공\")\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(error);\n\t\t})\n\t};*/\n\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Userid\"\n\t\t\t\t\tvalue={user_id}\n\t\t\t\t\tonChange={(e) => setUserid(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\tvalue={user_pw}\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\">Login</button>\n\t\t\t</form>\n\t\t\t<Link to=\"/LoggedIn\" style={{ textDecoration: \"none\" }}>\n\t\t\t\t메인페이지로 이동\n\t\t\t</Link>\n\t\t</>\n\t);\n}\n\nexport default LoginPage;\n","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/ShoppingPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Footer.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Header.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/DefaultHeader.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/DefaultBody.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/MainPage.js",["109","110"],[],"import {Container} from \"react-bootstrap\";\nimport React, {useRef, useState} from 'react';\nimport io from 'socket.io-client';\n\nfunction MainPage(props) {\n\n  const socket = io();\n    const myFaceRef = useRef(null);\n    const muteRef = useRef(null);\n    const cameraRef = useRef(null);\n    const camerasRef = useRef(null);\n    const callRef = useRef(null);\n    const welcomeRef = useRef(null);\n    const welcomeFormRef = useRef(null);\n    const peerFaceRef = useRef(null);\n    const myStreamRef = useRef(null);\n\n    const chatListRef = useRef(null);\n    const chatBoxRef = useRef(null);\n\n\n    const [hidden, setHidden] = useState(true);\n    const [welHidden, setWelHidden] = useState(false);\n\n    let myStream;\n    let muted = false;\n    let cameraOff = false;\n    let roomName;\n    let myPeerConnection;\n    let myDataChannel;\n    let peopleInRoom = 1;\n\n    let pcObj = {};\nasync function getCameras() {\n  try {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const cameras = devices.filter((device) => device.kind === \"videoinput\");\n    const currentCamera = myStream.getVideoTracks()[0];\n    cameras.forEach((camera) => {\n      const option = document.createElement(\"option\");\n      option.value = camera.deviceId;\n      option.innerText = camera.label;\n      if (currentCamera.label === camera.label) {\n        option.selected = true;\n      }\n      camerasRef.current.appendChild(option);\n    });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function getMedia(deviceId) {\n  const initialConstrains = {\n    audio: true,\n    video: { facingMode: \"user\" },\n  };\n  const cameraConstraints = {\n    audio: true,\n    video: { deviceId: { exact: deviceId } },\n  };\n  try {\n    myStream = await navigator.mediaDevices.getUserMedia(\n      // deviceId가 있다면 특정 camera로, 없다면 셀프 카메라로 설정\n      deviceId ? cameraConstraints : initialConstrains\n    );\n    myFaceRef.current.srcObject = myStream;\n    if (!deviceId) {\n      await getCameras();\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction handleMuteClick() {\n  myStream\n    .getAudioTracks()\n    .forEach((track) => (track.enabled = !track.enabled));\n  if (!muted) {\n    muteRef.class.innerText = \"Unmute\";\n    muted = true;\n  } else {\n    muteRef.class.innerText = \"Mute\";\n    muted = false;\n  }\n}\nfunction handleCameraClick() {\n  myStream\n    .getVideoTracks()\n    .forEach((track) => (track.enabled = !track.enabled));\n  if (cameraOff) {\n    cameraRef.current.innerText = \"Turn Camera Off\";\n    cameraOff = false;\n  } else {\n    cameraRef.current.innerText = \"Turn Camera On\";\n    cameraOff = true;\n  }\n}\n\nasync function handleCameraChange() {\n  // select 한 camera id를 기준으로 다시 getMedia를 통해 미디어 스트림을 가져옴\n  await getMedia(camerasRef.current.value);\n  if (myPeerConnection) {\n    const videoTrack = myStream.getVideoTracks()[0];\n    const videoSender = myPeerConnection\n      .getSenders()\n      .find((sender) => sender.track.kind === \"video\");\n    videoSender.replaceTrack(videoTrack);\n  }\n}\n\n\n\n\nasync function initCall() {\n  setWelHidden(true);\n  setHidden(false);\n  await getMedia();\n  // myPeerConnection = makeConnection(); // 수정된 부분\n}\n\nasync function handleWelcomeSubmit(event) {\n  event.preventDefault();\n  const input = welcomeFormRef.current.querySelector(\"input\");\n  // await initCall();\n  // await getMedia();\n  // 추후에 닉네임 추가\n\n  if(socket.disconnected) {\n    socket.connect();\n  }\n  socket.emit(\"join_room\", input.value);\n  roomName = input.value;\n  input.value = \"\";\n}\n\n\n\nsocket.on(\"reject_join\", () => {\n  // Paint modal\n  // paintModal(\"Sorry, The room is already full.\");\n\n  // Erase names\n  // const nicknameContainer = document.querySelector(\"#userNickname\");\n  // nicknameContainer.innerText = \"\";\n  roomName = \"\";\n  // nickname = \"\";\n});\n\nsocket.on(\"accept_join\", async (userObjArr) => {\n  await initCall();\n\n  const length = userObjArr.length;\n  if (length === 1) {\n    return;\n  }\n\n  // writeChat(\"Notice!\", NOTICE_CN);\n  for (let i = 0; i < length; ++i) {\n    try {\n      const newPC = createConnection(\n        userObjArr[i].socketId,\n        // userObjArr[i].nickname\n      );\n      const offer = await newPC.createOffer();\n      await newPC.setLocalDescription(offer);\n      socket.emit(\"offer\", offer, userObjArr[i].socketId);\n      // writeChat(`__${userObjArr[i].nickname}__`, NOTICE_CN);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  // writeChat(\"is in the room.\", NOTICE_CN);\n});\n\nsocket.on(\"offer\", async (offer, remoteSocketId) => {\n  try {\n    const newPC = createConnection(remoteSocketId);\n    await newPC.setRemoteDescription(offer);\n    const answer = await newPC.createAnswer();\n    await newPC.setLocalDescription(answer);\n    socket.emit(\"answer\", answer, remoteSocketId);\n    // writeChat(`notice! __${remoteNickname}__ joined the room`, NOTICE_CN);\n  } catch (err) {\n    console.error(err);\n  }\n});\n\nsocket.on(\"answer\", async (answer, remoteSocketId) => {\n  await pcObj[remoteSocketId].setRemoteDescription(answer);\n});\n\nsocket.on(\"ice\", async (ice, remoteSocketId) => {\n  await pcObj[remoteSocketId].addIceCandidate(ice);\n});\n\nsocket.on(\"chat\", (message) => {\n  // writeChat(message);\n});\n\nsocket.on(\"leave_room\", (leavedSocketId) => {\n  // removeVideo(leavedSocketId);\n  // writeChat(`notice! ${nickname} leaved the room.`, NOTICE_CN);\n  // --peopleInRoom;\n  // sortStreams();\n});\n\n// RTC code\n\nfunction createConnection(remoteSocketId) {\n  const myPeerConnection = new RTCPeerConnection({\n    iceServers: [\n      {\n        urls: [\n          \"stun:stun.l.google.com:19302\",\n          \"stun:stun1.l.google.com:19302\",\n          \"stun:stun2.l.google.com:19302\",\n          \"stun:stun3.l.google.com:19302\",\n          \"stun:stun4.l.google.com:19302\",\n        ],\n      },\n    ],\n  });\n  myPeerConnection.addEventListener(\"icecandidate\", (event) => {\n    handleIce(event, remoteSocketId);\n  });\n  myPeerConnection.addEventListener(\"track\", (event) => {\n    handleAddStream(event, remoteSocketId);\n  });\n  // myPeerConnection.addEventListener(\n  //   \"iceconnectionstatechange\",\n  //   handleConnectionStateChange\n  // );\n  myStream //\n    .getTracks()\n    .forEach((track) => myPeerConnection.addTrack(track, myStream));\n\n  pcObj[remoteSocketId] = myPeerConnection;\n\n  ++peopleInRoom;\n  // sortStreams();\n  return myPeerConnection;\n}\n\nfunction handleIce(event, remoteSocketId) {\n  if (event.candidate) {\n    socket.emit(\"ice\", event.candidate, remoteSocketId);\n  }\n}\n\nfunction handleAddStream(event, remoteSocketId) {\n  const peerStream = event.streams[0];\n  paintPeerFace(peerStream, remoteSocketId);\n}\n\nfunction paintPeerFace(peerStream, id) {\n  const streams = myStreamRef.current;\n  let div = document.getElementById(id);\n  if (!div) {\n    div = document.createElement(\"div\");\n    div.id = id;\n    streams.appendChild(div);\n  }\n  const video = div.querySelector(\"video\") || document.createElement(\"video\");\n  video.autoplay = true;\n  video.playsInline = true;\n  video.width = \"400\";\n  video.height = \"400\";\n  video.srcObject = peerStream;\n  div.appendChild(video);\n}\n\n// function sortStreams() {\n//   const streams = document.querySelector(\"#streams\");\n//   const streamArr = streams.querySelectorAll(\"div\");\n//   streamArr.forEach((stream) => (stream.className = `people${peopleInRoom}`));\n// }\n\n\n\n// chatting\n\nfunction sendChat() {\n  const chatBox = chatBoxRef.current;\n  const chatList = chatListRef.current;\n  const msg = chatBox.value;\n  socket.emit(\"sendChat\", roomName, msg, () => {\n    const li = document.createElement(\"li\");\n    li.innerText = msg;\n    chatList.appendChild(li);\n  });\n\n}\n\n\n\n\n  return (\n    <Container>\n      <h1>영상통화</h1>\n      <div className=\"video\">\n        <div>\n            <div id=\"welcome\" ref={welcomeRef} \n                style={{display: welHidden ? \"none\" : \"block\"}}\n            >\n                <form ref={welcomeFormRef}>\n                    <input placeholder=\"room name\" required type=\"text\"/>\n                    <button onClick={handleWelcomeSubmit}>Enter room</button>\n                </form>\n            </div>\n            <div id=\"call\" ref={callRef}\n                style={{ display: hidden ? \"none\" : \"block\" }}\n            >\n                <div id=\"myStream\" ref={myStreamRef}>\n                    <video id=\"myFace\"ref={myFaceRef} autoPlay playsInline width=\"400\" height=\"400\"></video>\n                    <button id=\"mute\" ref={muteRef} onClick={handleMuteClick}>Mute</button>\n                    <button id=\"camera\" ref={cameraRef} onClick={handleCameraClick}>Turn Camera Off</button>\n                    <select id=\"cameras\" ref={camerasRef} onChange={handleCameraChange}></select>\n                    <video id=\"peerFace\" ref={peerFaceRef} autoPlay playsInline width=\"400\" height=\"400\"></video>\n                </div>\n            </div>\n            \n            <div className=\"chat\" >\n              <h2>Chatting</h2>\n              <ul ref={chatListRef}></ul>\n              <form>\n                <input ref={chatBoxRef} type=\"text\" required placeholder=\"채팅을 입력하세요\"/>\n                <button onClick={sendChat}>Send</button>\n              </form>\n            </div>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default MainPage;\n\n","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar2.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar3.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar1.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"115","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"116","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"117","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":14},{"ruleId":"111","severity":1,"message":"118","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":15},{"ruleId":"111","severity":1,"message":"119","line":34,"column":24,"nodeType":"113","messageId":"114","endLine":34,"endColumn":32},{"ruleId":"111","severity":1,"message":"120","line":35,"column":24,"nodeType":"113","messageId":"114","endLine":35,"endColumn":36},{"ruleId":"111","severity":1,"message":"121","line":11,"column":9,"nodeType":"113","messageId":"114","endLine":11,"endColumn":17},{"ruleId":"111","severity":1,"message":"122","line":30,"column":9,"nodeType":"113","messageId":"114","endLine":30,"endColumn":22},{"ruleId":"111","severity":1,"message":"123","line":31,"column":9,"nodeType":"113","messageId":"114","endLine":31,"endColumn":21},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Signup' is defined but never used.","'Update' is defined but never used.","'Sidebar' is defined but never used.","'setEmail' is assigned a value but never used.","'setUserClass' is assigned a value but never used.","'response' is assigned a value but never used.","'myDataChannel' is defined but never used.","'peopleInRoom' is assigned a value but never used."]