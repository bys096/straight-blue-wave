[{"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\index.js":"1","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\App.js":"2","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\reportWebVitals.js":"3","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\SignUp.js":"4","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\UpdatePage.js":"5","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\DefaultPage.js":"6","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\LoginPage.js":"7","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\LoggedIn.js":"8","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\CommunityPage.js":"9","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\ShoppingPage.js":"10","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Footer.js":"11","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Header.js":"12","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Sidebar.js":"13","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\DefaultHeader.js":"14","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\DefaultBody.js":"15","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\MainPage.js":"16","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Sidebar2.js":"17","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Sidebar1.js":"18","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Sidebar3.js":"19"},{"size":698,"mtime":1683080863069,"results":"20","hashOfConfig":"21"},{"size":1100,"mtime":1683080863038,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1683080863085,"results":"23","hashOfConfig":"21"},{"size":7891,"mtime":1683163792940,"results":"24","hashOfConfig":"21"},{"size":6072,"mtime":1683080863085,"results":"25","hashOfConfig":"21"},{"size":309,"mtime":1683080863069,"results":"26","hashOfConfig":"21"},{"size":1419,"mtime":1683163801858,"results":"27","hashOfConfig":"21"},{"size":465,"mtime":1683080863085,"results":"28","hashOfConfig":"21"},{"size":754,"mtime":1683080863069,"results":"29","hashOfConfig":"21"},{"size":781,"mtime":1683080863085,"results":"30","hashOfConfig":"21"},{"size":458,"mtime":1683080863054,"results":"31","hashOfConfig":"21"},{"size":1535,"mtime":1683080863054,"results":"32","hashOfConfig":"21"},{"size":1911,"mtime":1683080863069,"results":"33","hashOfConfig":"21"},{"size":1932,"mtime":1683080863054,"results":"34","hashOfConfig":"21"},{"size":1837,"mtime":1683080863054,"results":"35","hashOfConfig":"21"},{"size":8904,"mtime":1683080863085,"results":"36","hashOfConfig":"21"},{"size":395,"mtime":1683080863069,"results":"37","hashOfConfig":"21"},{"size":374,"mtime":1683080863069,"results":"38","hashOfConfig":"21"},{"size":379,"mtime":1683080863069,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qyr9u4",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\index.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\App.js",["100","101","102","103","104"],[],"import \"./App.css\";\r\nimport Footer from \"./components/views/Footer\";\r\nimport Header from \"./components/views/Header\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport Signup from \"./pages/SignUp\";\r\nimport Update from \"./pages/UpdatePage\";\r\nimport Sidebar from \"./components/views/Sidebar\";\r\nimport DefaultPage from \"./pages/DefaultPage\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport LoggedIn from \"./pages/LoggedIn\";\r\nimport CommunityPage from \"./pages/CommunityPage\";\r\nimport ShoppingPage from \"./pages/ShoppingPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Routes>\r\n\t\t\t\t<Route path=\"/\" exact={true} Component={DefaultPage} />\r\n\t\t\t\t<Route path=\"/SignUp\" exact={true} Component={SignUp} />\r\n\t\t\t\t<Route path=\"/login\" exact={true} Component={LoginPage} />\r\n\t\t\t\t<Route path=\"/LoggedIn\" exact={true} Component={LoggedIn} />\r\n\t\t\t\t<Route path=\"/community\" exact={true} Component={CommunityPage} />\r\n\t\t\t\t<Route path=\"/shopping\" exact={true} Component={ShoppingPage}></Route>\r\n\t\t\t</Routes>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\reportWebVitals.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\SignUp.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\UpdatePage.js",["105","106"],[],"import React, {useState} from \"react\";\r\nimport {useNavigate, Link} from \"react-router-dom\";\r\nimport {Container, Form, Button, Alert} from \"react-bootstrap\";\r\n\r\nconst Update = () => {\r\n\tconst storedUser = sessionStorage.getItem(\"user\");\r\n\tlet storedId,\r\n\t\tstoredName,\r\n\t\tstoredBirth,\r\n\t\tstoredGender,\r\n        storedEmail,\r\n        storedClass = \"\";\r\n\r\n\t// sessionStorage에서 값 불러오기\r\n\tif (storedUser) {\r\n\t\tconst {user_id, user_name, gender, user_birth, user_email, user_class} = JSON.parse(storedUser);\r\n\t\tstoredId = user_id;\r\n\t\tstoredName = user_name;\r\n\t\tstoredGender = gender;\r\n\t\tstoredBirth = user_birth;\r\n        storedEmail = user_email;\r\n        storedClass = user_class;\r\n\t}\r\n\r\n\tconst [id, setId] = useState(storedId);\r\n\tconst [name, setName] = useState(storedName);\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [passwordCheck, setPasswordCheck] = useState(\"\");\r\n\tconst [term, setTerm] = useState(false);\r\n\tconst [passwordError, setPasswordError] = useState(false);\r\n\tconst [termError, setTermError] = useState(false);\r\n\tconst [gender, setGender] = useState(storedGender);\r\n    const [user_birth, setBirth] = useState(storedBirth);\r\n    const [user_email, setEmail] = useState(storedEmail);\r\n    const [user_class, setUserClass] = useState(storedClass);\r\n\r\n\tconst history = useNavigate();\r\n\r\n\t// axios 임시\r\n\t//  const onSubmit = async (e) => {\r\n\t//     e.preventDefault();\r\n\t//     /**검증 로직 만들기\r\n\t//      * 1. 비밀번호와 비밀번호 체크가 다를 경우를 검증한다\r\n\t//      * 2. 약관 동의를 확인한다.\r\n\t//      */\r\n\t//     if(password !== passwordCheck){\r\n\t//         return setPasswordError(true);\r\n\t//     }\r\n\t//     if(!term){\r\n\t//         return setTermError(true);\r\n\t//     }\r\n\t//     console.log({\r\n\t//         id,\r\n\t//         nick,\r\n\t//         password,\r\n\t//         passwordCheck,\r\n\t//         gender,\r\n\t//         age,\r\n\t//         term\r\n\t//     });\r\n\t//     try {\r\n\t//         const response = await axios.post('http://localhost:8080/api/signup', {\r\n\t//           id,\r\n\t//           nick,\r\n\t//           password,\r\n\t//           gender,\r\n\t//           age,\r\n\t//         });\r\n\r\n\t//         if (response.data.success) {\r\n\t//           sessionStorage.setItem('user', JSON.stringify(response.data.user));\r\n\t//           history.push('/login');\r\n\t//         } else {\r\n\t//           alert('Signup failed');\r\n\t//         }\r\n\t//       } catch (error) {\r\n\t//         console.error('Signup error:', error);\r\n\t//         alert(\"회원가입 오류!\")\r\n\t//       }\r\n\t// };\r\n\r\n\t//Submit 버튼 동작\r\n\tconst onSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (password !== passwordCheck) {\r\n\t\t\treturn setPasswordError(true);\r\n\t\t}\r\n\t\tif (!term) {\r\n\t\t\treturn setTermError(true);\r\n\t\t}\r\n\t\tconsole.log({\r\n\t\t\tid,\r\n\t\t\tname,\r\n\t\t\tpassword,\r\n\t\t\tpasswordCheck,\r\n\t\t\tgender,\r\n\t\t\tuser_birth,\r\n\t\t\tterm,\r\n\t\t});\r\n\r\n\t\tsessionStorage.setItem(\r\n\t\t\t\"user\",\r\n\t\t\tJSON.stringify({id, password, name, gender, user_birth, user_class, user_email})\r\n\t\t);\r\n\r\n\t\tif (sessionStorage.getItem(\"user\") != null) {\r\n\t\t\thistory(\"/\");\r\n\t\t}\r\n\t};\r\n\r\n\t// Coustom Hook 이전\r\n\tconst onChangeId = (e) => {\r\n\t\tsetId(e.target.value);\r\n\t};\r\n\tconst onChangeName = (e) => {\r\n\t\tsetName(e.target.value);\r\n\t};\r\n\tconst onChangePassword = (e) => {\r\n\t\tsetPassword(e.target.value);\r\n\t};\r\n\tconst onChangePasswordChk = (e) => {\r\n\t\t//비밀번호를 입력할때마다 password 를 검증하는 함수\r\n\t\tsetPasswordError(e.target.value !== password);\r\n\t\tsetPasswordCheck(e.target.value);\r\n\t};\r\n\tconst onChangeTerm = (e) => {\r\n\t\t//체크박스 초기화\r\n\t\tsetTermError(false);\r\n\t\tsetTerm(e.target.checked);\r\n\t};\r\n\r\n\tconst onChangeGender = (e) => {\r\n\t\tsetGender(e.target.value);\r\n\t};\r\n\r\n\tconst onChangeAge = (e) => {\r\n\t\tsetBirth(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h1>정보 수정</h1>\r\n\t\t\t<Form onSubmit={onSubmit}>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label htmlFor=\"user-id\">아이디</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname=\"user-id\"\r\n\t\t\t\t\t\tvalue={id}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={onChangeId}\r\n\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label htmlFor=\"user-password\">비밀번호</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname=\"user-password\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={onChangePassword}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label htmlFor=\"user-password-check\">비밀번호체크</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname=\"user-password-check\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvalue={passwordCheck}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={onChangePasswordChk}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{passwordError && (\r\n\t\t\t\t\t\t<Alert variant=\"danger\">비밀번호가 일치하지 않습니다.</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Group>\r\n                <Form.Group>\r\n\t\t\t\t\t<Form.Label htmlFor=\"user-name\">이름</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tname=\"user-name\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tonChange={onChangeName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label htmlFor=\"gender\">성별</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\tname=\"gender\"\r\n\t\t\t\t\t\tvalue={gender}\r\n\t\t\t\t\t\tonChange={onChangeGender}>\r\n\t\t\t\t\t\t<option value=\"male\">남성</option>\r\n\t\t\t\t\t\t<option value=\"female\">여성</option>\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Label htmlFor=\"user_birth\">생일</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tname=\"birth\"\r\n\t\t\t\t\t\tonChange={onChangeAge}\r\n\t\t\t\t\t\trequired></Form.Control>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group>\r\n\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tname=\"user-term\"\r\n\t\t\t\t\t\tvalue={term}\r\n\t\t\t\t\t\tonChange={onChangeTerm}\r\n\t\t\t\t\t\tlabel=\"동의 합니까?\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{termError && (\r\n\t\t\t\t\t\t<Alert variant=\"danger\">약관에 동의하셔야 합니다.</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Button type=\"primary\" htmltype=\"submit\">\r\n\t\t\t\t\t정보수정\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\t\t\t<div style={{marginTop: 10}}>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<Button>홈으로 돌아가기</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Update;\r\n","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\DefaultPage.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\LoginPage.js",["107"],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\LoggedIn.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\CommunityPage.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\ShoppingPage.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Footer.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Header.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Sidebar.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\DefaultHeader.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\DefaultBody.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\pages\\MainPage.js",["108","109","110"],[],"import {Container} from \"react-bootstrap\";\r\nimport React, {useRef, useState} from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nfunction MainPage(props) {\r\n\r\n  const socket = io();\r\n    const myFaceRef = useRef(null);\r\n    const muteRef = useRef(null);\r\n    const cameraRef = useRef(null);\r\n    const camerasRef = useRef(null);\r\n    const callRef = useRef(null);\r\n    const welcomeRef = useRef(null);\r\n    const welcomeFormRef = useRef(null);\r\n    const peerFaceRef = useRef(null);\r\n    const myStreamRef = useRef(null);\r\n    const [hidden, setHidden] = useState(true);\r\n    const [welHidden, setWelHidden] = useState(false);\r\n\r\n    let myStream;\r\n    let muted = false;\r\n    let cameraOff = false;\r\n    let roomName;\r\n    let myPeerConnection;\r\n    let myDataChannel;\r\n    let peopleInRoom = 1;\r\n\r\n    let pcObj = {};\r\nasync function getCameras() {\r\n  try {\r\n    const devices = await navigator.mediaDevices.enumerateDevices();\r\n    const cameras = devices.filter((device) => device.kind === \"videoinput\");\r\n    const currentCamera = myStream.getVideoTracks()[0];\r\n    cameras.forEach((camera) => {\r\n      const option = document.createElement(\"option\");\r\n      option.value = camera.deviceId;\r\n      option.innerText = camera.label;\r\n      if (currentCamera.label === camera.label) {\r\n        option.selected = true;\r\n      }\r\n      camerasRef.current.appendChild(option);\r\n    });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nasync function getMedia(deviceId) {\r\n  const initialConstrains = {\r\n    audio: true,\r\n    video: { facingMode: \"user\" },\r\n  };\r\n  const cameraConstraints = {\r\n    audio: true,\r\n    video: { deviceId: { exact: deviceId } },\r\n  };\r\n  try {\r\n    myStream = await navigator.mediaDevices.getUserMedia(\r\n      // deviceId가 있다면 특정 camera로, 없다면 셀프 카메라로 설정\r\n      deviceId ? cameraConstraints : initialConstrains\r\n    );\r\n    myFaceRef.current.srcObject = myStream;\r\n    if (!deviceId) {\r\n      await getCameras();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nfunction handleMuteClick() {\r\n  myStream\r\n    .getAudioTracks()\r\n    .forEach((track) => (track.enabled = !track.enabled));\r\n  if (!muted) {\r\n    muteRef.class.innerText = \"Unmute\";\r\n    muted = true;\r\n  } else {\r\n    muteRef.class.innerText = \"Mute\";\r\n    muted = false;\r\n  }\r\n}\r\nfunction handleCameraClick() {\r\n  myStream\r\n    .getVideoTracks()\r\n    .forEach((track) => (track.enabled = !track.enabled));\r\n  if (cameraOff) {\r\n    cameraRef.current.innerText = \"Turn Camera Off\";\r\n    cameraOff = false;\r\n  } else {\r\n    cameraRef.current.innerText = \"Turn Camera On\";\r\n    cameraOff = true;\r\n  }\r\n}\r\n\r\nasync function handleCameraChange() {\r\n  // select 한 camera id를 기준으로 다시 getMedia를 통해 미디어 스트림을 가져옴\r\n  await getMedia(camerasRef.current.value);\r\n  if (myPeerConnection) {\r\n    const videoTrack = myStream.getVideoTracks()[0];\r\n    const videoSender = myPeerConnection\r\n      .getSenders()\r\n      .find((sender) => sender.track.kind === \"video\");\r\n    videoSender.replaceTrack(videoTrack);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nasync function initCall() {\r\n  setWelHidden(true);\r\n  setHidden(false);\r\n  await getMedia();\r\n  // myPeerConnection = makeConnection(); // 수정된 부분\r\n}\r\n\r\nasync function handleWelcomeSubmit(event) {\r\n  event.preventDefault();\r\n  const input = welcomeFormRef.current.querySelector(\"input\");\r\n  // await initCall();\r\n  // await getMedia();\r\n  // 추후에 닉네임 추가\r\n\r\n  if(socket.disconnected) {\r\n    socket.connect();\r\n  }\r\n  socket.emit(\"join_room\", input.value);\r\n  roomName = input.value;\r\n  input.value = \"\";\r\n}\r\n\r\n\r\n\r\nsocket.on(\"reject_join\", () => {\r\n  // Paint modal\r\n  // paintModal(\"Sorry, The room is already full.\");\r\n\r\n  // Erase names\r\n  // const nicknameContainer = document.querySelector(\"#userNickname\");\r\n  // nicknameContainer.innerText = \"\";\r\n  roomName = \"\";\r\n  // nickname = \"\";\r\n});\r\n\r\nsocket.on(\"accept_join\", async (userObjArr) => {\r\n  await initCall();\r\n\r\n  const length = userObjArr.length;\r\n  if (length === 1) {\r\n    return;\r\n  }\r\n\r\n  // writeChat(\"Notice!\", NOTICE_CN);\r\n  for (let i = 0; i < length; ++i) {\r\n    try {\r\n      const newPC = createConnection(\r\n        userObjArr[i].socketId,\r\n        // userObjArr[i].nickname\r\n      );\r\n      const offer = await newPC.createOffer();\r\n      await newPC.setLocalDescription(offer);\r\n      socket.emit(\"offer\", offer, userObjArr[i].socketId);\r\n      // writeChat(`__${userObjArr[i].nickname}__`, NOTICE_CN);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n  // writeChat(\"is in the room.\", NOTICE_CN);\r\n});\r\n\r\nsocket.on(\"offer\", async (offer, remoteSocketId) => {\r\n  try {\r\n    const newPC = createConnection(remoteSocketId);\r\n    await newPC.setRemoteDescription(offer);\r\n    const answer = await newPC.createAnswer();\r\n    await newPC.setLocalDescription(answer);\r\n    socket.emit(\"answer\", answer, remoteSocketId);\r\n    // writeChat(`notice! __${remoteNickname}__ joined the room`, NOTICE_CN);\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n});\r\n\r\nsocket.on(\"answer\", async (answer, remoteSocketId) => {\r\n  await pcObj[remoteSocketId].setRemoteDescription(answer);\r\n});\r\n\r\nsocket.on(\"ice\", async (ice, remoteSocketId) => {\r\n  await pcObj[remoteSocketId].addIceCandidate(ice);\r\n});\r\n\r\nsocket.on(\"chat\", (message) => {\r\n  // writeChat(message);\r\n});\r\n\r\nsocket.on(\"leave_room\", (leavedSocketId) => {\r\n  // removeVideo(leavedSocketId);\r\n  // writeChat(`notice! ${nickname} leaved the room.`, NOTICE_CN);\r\n  // --peopleInRoom;\r\n  // sortStreams();\r\n});\r\n\r\n// RTC code\r\n\r\nfunction createConnection(remoteSocketId) {\r\n  const myPeerConnection = new RTCPeerConnection({\r\n    iceServers: [\r\n      {\r\n        urls: [\r\n          \"stun:stun.l.google.com:19302\",\r\n          \"stun:stun1.l.google.com:19302\",\r\n          \"stun:stun2.l.google.com:19302\",\r\n          \"stun:stun3.l.google.com:19302\",\r\n          \"stun:stun4.l.google.com:19302\",\r\n        ],\r\n      },\r\n    ],\r\n  });\r\n  myPeerConnection.addEventListener(\"icecandidate\", (event) => {\r\n    handleIce(event, remoteSocketId);\r\n  });\r\n  myPeerConnection.addEventListener(\"track\", (event) => {\r\n    handleAddStream(event, remoteSocketId);\r\n  });\r\n  // myPeerConnection.addEventListener(\r\n  //   \"iceconnectionstatechange\",\r\n  //   handleConnectionStateChange\r\n  // );\r\n  myStream //\r\n    .getTracks()\r\n    .forEach((track) => myPeerConnection.addTrack(track, myStream));\r\n\r\n  pcObj[remoteSocketId] = myPeerConnection;\r\n\r\n  ++peopleInRoom;\r\n  // sortStreams();\r\n  return myPeerConnection;\r\n}\r\n\r\nfunction handleIce(event, remoteSocketId) {\r\n  if (event.candidate) {\r\n    socket.emit(\"ice\", event.candidate, remoteSocketId);\r\n  }\r\n}\r\n\r\nfunction handleAddStream(event, remoteSocketId) {\r\n  const peerStream = event.streams[0];\r\n  paintPeerFace(peerStream, remoteSocketId);\r\n}\r\n\r\nfunction paintPeerFace(peerStream, id) {\r\n  const streams = myStreamRef.current;\r\n  let div = document.getElementById(id);\r\n  if (!div) {\r\n    div = document.createElement(\"div\");\r\n    div.id = id;\r\n    streams.appendChild(div);\r\n  }\r\n  const video = div.querySelector(\"video\") || document.createElement(\"video\");\r\n  video.autoplay = true;\r\n  video.playsInline = true;\r\n  video.width = \"400\";\r\n  video.height = \"400\";\r\n  video.srcObject = peerStream;\r\n  div.appendChild(video);\r\n}\r\n\r\n// function sortStreams() {\r\n//   const streams = document.querySelector(\"#streams\");\r\n//   const streamArr = streams.querySelectorAll(\"div\");\r\n//   streamArr.forEach((stream) => (stream.className = `people${peopleInRoom}`));\r\n// }\r\n\r\n  return (\r\n    <Container>\r\n      <h1>영상통화</h1>\r\n      <div className=\"video\">\r\n        <div>\r\n            <div id=\"welcome\" ref={welcomeRef} \r\n                style={{display: welHidden ? \"none\" : \"block\"}}\r\n            >\r\n                <form ref={welcomeFormRef}>\r\n                    <input placeholder=\"room name\" required type=\"text\"/>\r\n                    <button onClick={handleWelcomeSubmit}>Enter room</button>\r\n                </form>\r\n            </div>\r\n            <div id=\"call\" ref={callRef}\r\n                style={{ display: hidden ? \"none\" : \"block\" }}\r\n            >\r\n                <div id=\"myStream\" ref={myStreamRef}>\r\n                    <video id=\"myFace\"ref={myFaceRef} autoPlay playsInline width=\"400\" height=\"400\"></video>\r\n                    <button id=\"mute\" ref={muteRef} onClick={handleMuteClick}>Mute</button>\r\n                    <button id=\"camera\" ref={cameraRef} onClick={handleCameraClick}>Turn Camera Off</button>\r\n                    <select id=\"cameras\" ref={camerasRef} onChange={handleCameraChange}></select>\r\n                    <video id=\"peerFace\" ref={peerFaceRef} autoPlay playsInline width=\"400\" height=\"400\"></video>\r\n                </div>\r\n            </div>\r\n            <button onClick={handleWelcomeSubmit}>teset</button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n\r\n","C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Sidebar2.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Sidebar1.js",[],[],"C:\\Spring\\straight-blue-wave\\node-server\\src\\client\\src\\components\\views\\Sidebar3.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"115","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"116","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"117","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":14},{"ruleId":"111","severity":1,"message":"118","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":15},{"ruleId":"111","severity":1,"message":"119","line":34,"column":24,"nodeType":"113","messageId":"114","endLine":34,"endColumn":32},{"ruleId":"111","severity":1,"message":"120","line":35,"column":24,"nodeType":"113","messageId":"114","endLine":35,"endColumn":36},{"ruleId":"111","severity":1,"message":"121","line":11,"column":9,"nodeType":"113","messageId":"114","endLine":11,"endColumn":17},{"ruleId":"111","severity":1,"message":"122","line":23,"column":9,"nodeType":"113","messageId":"114","endLine":23,"endColumn":17},{"ruleId":"111","severity":1,"message":"123","line":25,"column":9,"nodeType":"113","messageId":"114","endLine":25,"endColumn":22},{"ruleId":"111","severity":1,"message":"124","line":26,"column":9,"nodeType":"113","messageId":"114","endLine":26,"endColumn":21},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Signup' is defined but never used.","'Update' is defined but never used.","'Sidebar' is defined but never used.","'setEmail' is assigned a value but never used.","'setUserClass' is assigned a value but never used.","'response' is assigned a value but never used.","'roomName' is assigned a value but never used.","'myDataChannel' is defined but never used.","'peopleInRoom' is assigned a value but never used."]