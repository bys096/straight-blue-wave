[{"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/index.js":"1","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/reportWebVitals.js":"2","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/App.js":"3","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/SignUp.js":"4","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/LoggedIn.js":"5","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/UpdatePage.js":"6","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/DefaultPage.js":"7","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Sidebar.js":"8","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Header.js":"9","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Footer.js":"10","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/DefaultHeader.js":"11","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/DefaultBody.js":"12","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Sidebar2.js":"13","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Sidebar1.js":"14","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Sidebar3.js":"15","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/MainPage.js":"16","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/Login.js":"17","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/ShoppingPage.js":"18","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/CommunityPage.js":"19","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/LoginPage.js":"20","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/VideoCall.js":"21","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/index.js":"22","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/reportWebVitals.js":"23","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/App.js":"24","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/DefaultPage.js":"25","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/LoggedIn.js":"26","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/SignUp.js":"27","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/UpdatePage.js":"28","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/CommunityPage.js":"29","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/LoginPage.js":"30","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/ShoppingPage.js":"31","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Footer.js":"32","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Header.js":"33","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar.js":"34","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/DefaultHeader.js":"35","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/DefaultBody.js":"36","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/MainPage.js":"37","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar2.js":"38","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar3.js":"39","/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar1.js":"40"},{"size":676,"mtime":1683036910476,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1683036910477,"results":"43","hashOfConfig":"42"},{"size":1070,"mtime":1683045349727,"results":"44","hashOfConfig":"42"},{"size":7182,"mtime":1683036910477,"results":"45","hashOfConfig":"42"},{"size":444,"mtime":1683064205171,"results":"46","hashOfConfig":"42"},{"size":5841,"mtime":1683036910477,"results":"47","hashOfConfig":"42"},{"size":295,"mtime":1683045349728,"results":"48","hashOfConfig":"42"},{"size":1834,"mtime":1683045349728,"results":"49","hashOfConfig":"42"},{"size":1478,"mtime":1683045349727,"results":"50","hashOfConfig":"42"},{"size":438,"mtime":1683045349727,"results":"51","hashOfConfig":"42"},{"size":1869,"mtime":1683045349727,"results":"52","hashOfConfig":"42"},{"size":1780,"mtime":1683036910475,"results":"53","hashOfConfig":"42"},{"size":377,"mtime":1683036910476,"results":"54","hashOfConfig":"42"},{"size":356,"mtime":1683036910476,"results":"55","hashOfConfig":"42"},{"size":361,"mtime":1683036910476,"results":"56","hashOfConfig":"42"},{"size":8597,"mtime":1683064167383,"results":"57","hashOfConfig":"42"},{"size":3607,"mtime":1683036910477,"results":"58","hashOfConfig":"42"},{"size":745,"mtime":1683045349729,"results":"59","hashOfConfig":"42"},{"size":718,"mtime":1683045349728,"results":"60","hashOfConfig":"42"},{"size":976,"mtime":1683045349729,"results":"61","hashOfConfig":"42"},{"size":6739,"mtime":1683045349728,"results":"62","hashOfConfig":"42"},{"size":676,"mtime":1683036910476,"results":"63","hashOfConfig":"64"},{"size":362,"mtime":1683036910477,"results":"65","hashOfConfig":"64"},{"size":1070,"mtime":1683045349727,"results":"66","hashOfConfig":"64"},{"size":295,"mtime":1683045349728,"results":"67","hashOfConfig":"64"},{"size":444,"mtime":1683072561200,"results":"68","hashOfConfig":"64"},{"size":7182,"mtime":1683036910477,"results":"69","hashOfConfig":"64"},{"size":5841,"mtime":1683036910477,"results":"70","hashOfConfig":"64"},{"size":718,"mtime":1683045349728,"results":"71","hashOfConfig":"64"},{"size":976,"mtime":1683045349729,"results":"72","hashOfConfig":"64"},{"size":745,"mtime":1683045349729,"results":"73","hashOfConfig":"64"},{"size":438,"mtime":1683045349727,"results":"74","hashOfConfig":"64"},{"size":1478,"mtime":1683045349727,"results":"75","hashOfConfig":"64"},{"size":1834,"mtime":1683045349728,"results":"76","hashOfConfig":"64"},{"size":1869,"mtime":1683045349727,"results":"77","hashOfConfig":"64"},{"size":1780,"mtime":1683036910475,"results":"78","hashOfConfig":"64"},{"size":8597,"mtime":1683072561200,"results":"79","hashOfConfig":"64"},{"size":377,"mtime":1683036910476,"results":"80","hashOfConfig":"64"},{"size":361,"mtime":1683036910476,"results":"81","hashOfConfig":"64"},{"size":356,"mtime":1683036910476,"results":"82","hashOfConfig":"64"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ks7z5a",{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3ivxg6",{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/index.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/reportWebVitals.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/App.js",["208","209","210","211","212"],[],"import \"./App.css\";\nimport Footer from \"./components/views/Footer\";\nimport Header from \"./components/views/Header\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Signup from \"./pages/SignUp\";\nimport Update from \"./pages/UpdatePage\";\nimport Sidebar from \"./components/views/Sidebar\";\nimport DefaultPage from \"./pages/DefaultPage\";\nimport SignUp from \"./pages/SignUp\";\nimport LoggedIn from \"./pages/LoggedIn\";\nimport CommunityPage from \"./pages/CommunityPage\";\nimport ShoppingPage from \"./pages/ShoppingPage\";\nimport LoginPage from \"./pages/LoginPage\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" exact={true} Component={DefaultPage} />\n\t\t\t\t<Route path=\"/SignUp\" exact={true} Component={SignUp} />\n\t\t\t\t<Route path=\"/login\" exact={true} Component={LoginPage} />\n\t\t\t\t<Route path=\"/LoggedIn\" exact={true} Component={LoggedIn} />\n\t\t\t\t<Route path=\"/community\" exact={true} Component={CommunityPage} />\n\t\t\t\t<Route path=\"/shopping\" exact={true} Component={ShoppingPage}></Route>\n\t\t\t</Routes>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/SignUp.js",["213"],[],"import React, {useState} from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\nimport axios from 'axios';\nimport { Alert, Button, Container, Form } from 'react-bootstrap';\n\nconst SignUp = () =>{\n    const [user_id,setId] = useState('');\n    const [user_name,setName] = useState('');\n    const [user_pw,setPassword] = useState('');\n    const [passwordCheck,setPasswordCheck] = useState('');\n    const [term,setTerm] = useState(false);\n    const [passwordError,setPasswordError] = useState(false);\n    const [termError,setTermError] = useState(false);\n    const [user_gender, setGender] = useState('');\n    const [user_birth, setBirth] = useState('');\n    const [user_email, setEmail] = useState('');\n    const [user_class, setUserClass] = useState('');\n\n    const history = useNavigate();\n\n    // 세션 스토리지에 회원가입 정보 저장\n    \n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if(user_pw!== passwordCheck){\n            return setPasswordError(true);\n        }\n         if(!term){\n            return setTermError(true);\n        }\n        console.log({\n            user_id,\n            user_name,\n            user_pw,\n            passwordCheck,\n            user_gender,\n            user_birth,\n            term\n        });\n\n        sessionStorage.setItem('user', JSON.stringify({ user_id, user_pw, user_name, user_gender, user_email }));\n\n        if(sessionStorage.getItem(\"user\") != null) {\n           history('/');\n        }\n    } \n\n    // Coustom Hook 이전\n    const onChangeId = (e) => {\n        setId(e.target.value);\n    };\n    const onChangeName = (e) => {\n        setName(e.target.value);\n    };\n    const onChangePassword = (e) => {\n        setPassword(e.target.value);\n    };\n    const onChangePasswordChk = (e) => {\n        //비밀번호를 입력할때마다 password 를 검증하는 함수\n        setPasswordError(e.target.value !== user_pw);\n        setPasswordCheck(e.target.value);\n    };\n    const onChangeTerm = (e) => {\n        //체크박스 초기화\n        setTermError(false);\n        setTerm(e.target.checked);\n    };\n\n    const onChangeGender = (e) => {\n        setGender(e.target.value)\n    }\n\n    const onChangeBirth = (e) => {\n        setBirth(e.target.value)\n    }\n\n    const onChangeEmail = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const onChangeUserClass = (e) => {\n      setUserClass(e.target.value)\n  }\n\n  \n    // axios 임시\n    /*\n    const onSubmit = async (e) => {\n      e.preventDefault();\n      //검증 로직 만들기\n      // 1. 비밀번호와 비밀번호 체크가 다를 경우를 검증한다\n      // 2. 약관 동의를 확인한다.\n       \n      if(user_pw !== passwordCheck){\n          return setPasswordError(true);\n      }\n      if(!term){\n          return setTermError(true);\n      }\n      console.log({\n        user_id,\n        user_pw,\n        passwordCheck,\n        user_name,\n        user_gender,\n        user_birth,\n        user_email,\n        term\n      });\n      try {\n          const response = await axios.post('http://localhost:8080/user/join', {\n            user_id:user_id,\n            user_pw,\n            user_name,\n            user_birth,\n            user_email,\n            user_class,\n            user_gender\n          });\n    \n          if (response.data.success) {\n            sessionStorage.setItem('user', JSON.stringify(response.data.user));\n            history('/');\n          } else {\n            history('/');\n          }\n        } catch (error) {\n          console.error('Signup error:', error);\n          alert(\"회원가입 오류!\")\n        }\n  }; */\n\n    return (\n        <Container>\n          <h1>Sign Up</h1>\n          <Form onSubmit={onSubmit}>\n            <Form.Group>\n              <Form.Label htmlFor=\"user_id\">아이디</Form.Label>\n              <Form.Control name=\"user_id\" value={user_id} required onChange={onChangeId} />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"user_pw\">비밀번호</Form.Label>\n              <Form.Control\n                name=\"user_pw\"\n                type=\"password\"\n                value={user_pw}\n                required\n                onChange={onChangePassword}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"user-password-check\">비밀번호체크</Form.Label>\n              <Form.Control\n                name=\"user-password-check\"\n                type=\"password\"\n                value={passwordCheck}\n                required\n                onChange={onChangePasswordChk}\n              />\n              {passwordError && (\n                <Alert variant=\"danger\">비밀번호가 일치하지 않습니다.</Alert>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"user_name\">이름</Form.Label>\n              <Form.Control name=\"user_name\" value={user_name} required onChange={onChangeName} />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"user_birth\">나이</Form.Label>\n              <Form.Control\n                type=\"date\"\n                name=\"user_birth\"\n                value={user_birth}\n                onChange={onChangeBirth}\n                required\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"user_email\">이메일</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"user_email\"\n                value={user_email}\n                onChange={onChangeEmail}\n                required\n              ></Form.Control>\n              </Form.Group>\n              <Form.Group>\n              <Form.Label htmlFor=\"user_class\"></Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"user_class\"\n                value={user_class}\n                onChange={onChangeUserClass}\n                required\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"user_gender\">성별</Form.Label>\n              <Form.Control\n                as=\"select\"\n                name=\"user_gender\"\n                value={user_gender}\n                onChange={onChangeGender}\n              >\n                <option value=\"male\">남성</option>\n                <option value=\"female\">여성</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Check\n                type=\"checkbox\"\n                name=\"user-term\"\n                value={term}\n                onChange={onChangeTerm}\n                label=\"동의 합니까?\"\n              />\n              {termError && (\n                <Alert variant=\"danger\">약관에 동의하셔야 합니다.</Alert>\n              )}\n            </Form.Group>\n            <Button type=\"primary\" htmltype=\"submit\">\n              가입하기\n            </Button>\n          </Form>\n          <div style={{ marginTop: 10 }}>\n            <Link to=\"/\">\n              <Button>홈으로 돌아가기</Button>\n            </Link>\n          </div>\n        </Container>\n      );\n    };\n\nexport default SignUp;","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/LoggedIn.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/UpdatePage.js",["214","215"],[],"import React, {useState} from \"react\";\nimport {useNavigate, Link} from \"react-router-dom\";\nimport {Container, Form, Button, Alert} from \"react-bootstrap\";\n\nconst Update = () => {\n\tconst storedUser = sessionStorage.getItem(\"user\");\n\tlet storedId,\n\t\tstoredName,\n\t\tstoredBirth,\n\t\tstoredGender,\n        storedEmail,\n        storedClass = \"\";\n\n\t// sessionStorage에서 값 불러오기\n\tif (storedUser) {\n\t\tconst {user_id, user_name, gender, user_birth, user_email, user_class} = JSON.parse(storedUser);\n\t\tstoredId = user_id;\n\t\tstoredName = user_name;\n\t\tstoredGender = gender;\n\t\tstoredBirth = user_birth;\n        storedEmail = user_email;\n        storedClass = user_class;\n\t}\n\n\tconst [id, setId] = useState(storedId);\n\tconst [name, setName] = useState(storedName);\n\tconst [password, setPassword] = useState(\"\");\n\tconst [passwordCheck, setPasswordCheck] = useState(\"\");\n\tconst [term, setTerm] = useState(false);\n\tconst [passwordError, setPasswordError] = useState(false);\n\tconst [termError, setTermError] = useState(false);\n\tconst [gender, setGender] = useState(storedGender);\n    const [user_birth, setBirth] = useState(storedBirth);\n    const [user_email, setEmail] = useState(storedEmail);\n    const [user_class, setUserClass] = useState(storedClass);\n\n\tconst history = useNavigate();\n\n\t// axios 임시\n\t//  const onSubmit = async (e) => {\n\t//     e.preventDefault();\n\t//     /**검증 로직 만들기\n\t//      * 1. 비밀번호와 비밀번호 체크가 다를 경우를 검증한다\n\t//      * 2. 약관 동의를 확인한다.\n\t//      */\n\t//     if(password !== passwordCheck){\n\t//         return setPasswordError(true);\n\t//     }\n\t//     if(!term){\n\t//         return setTermError(true);\n\t//     }\n\t//     console.log({\n\t//         id,\n\t//         nick,\n\t//         password,\n\t//         passwordCheck,\n\t//         gender,\n\t//         age,\n\t//         term\n\t//     });\n\t//     try {\n\t//         const response = await axios.post('http://localhost:8080/api/signup', {\n\t//           id,\n\t//           nick,\n\t//           password,\n\t//           gender,\n\t//           age,\n\t//         });\n\n\t//         if (response.data.success) {\n\t//           sessionStorage.setItem('user', JSON.stringify(response.data.user));\n\t//           history.push('/login');\n\t//         } else {\n\t//           alert('Signup failed');\n\t//         }\n\t//       } catch (error) {\n\t//         console.error('Signup error:', error);\n\t//         alert(\"회원가입 오류!\")\n\t//       }\n\t// };\n\n\t//Submit 버튼 동작\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (password !== passwordCheck) {\n\t\t\treturn setPasswordError(true);\n\t\t}\n\t\tif (!term) {\n\t\t\treturn setTermError(true);\n\t\t}\n\t\tconsole.log({\n\t\t\tid,\n\t\t\tname,\n\t\t\tpassword,\n\t\t\tpasswordCheck,\n\t\t\tgender,\n\t\t\tuser_birth,\n\t\t\tterm,\n\t\t});\n\n\t\tsessionStorage.setItem(\n\t\t\t\"user\",\n\t\t\tJSON.stringify({id, password, name, gender, user_birth, user_class, user_email})\n\t\t);\n\n\t\tif (sessionStorage.getItem(\"user\") != null) {\n\t\t\thistory(\"/\");\n\t\t}\n\t};\n\n\t// Coustom Hook 이전\n\tconst onChangeId = (e) => {\n\t\tsetId(e.target.value);\n\t};\n\tconst onChangeName = (e) => {\n\t\tsetName(e.target.value);\n\t};\n\tconst onChangePassword = (e) => {\n\t\tsetPassword(e.target.value);\n\t};\n\tconst onChangePasswordChk = (e) => {\n\t\t//비밀번호를 입력할때마다 password 를 검증하는 함수\n\t\tsetPasswordError(e.target.value !== password);\n\t\tsetPasswordCheck(e.target.value);\n\t};\n\tconst onChangeTerm = (e) => {\n\t\t//체크박스 초기화\n\t\tsetTermError(false);\n\t\tsetTerm(e.target.checked);\n\t};\n\n\tconst onChangeGender = (e) => {\n\t\tsetGender(e.target.value);\n\t};\n\n\tconst onChangeAge = (e) => {\n\t\tsetBirth(e.target.value);\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<h1>정보 수정</h1>\n\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"user-id\">아이디</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tname=\"user-id\"\n\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={onChangeId}\n\t\t\t\t\t\treadOnly\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"user-password\">비밀번호</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tname=\"user-password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={onChangePassword}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"user-password-check\">비밀번호체크</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tname=\"user-password-check\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={passwordCheck}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={onChangePasswordChk}\n\t\t\t\t\t/>\n\t\t\t\t\t{passwordError && (\n\t\t\t\t\t\t<Alert variant=\"danger\">비밀번호가 일치하지 않습니다.</Alert>\n\t\t\t\t\t)}\n\t\t\t\t</Form.Group>\n                <Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"user-name\">이름</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tname=\"user-name\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tonChange={onChangeName}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"gender\">성별</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\tname=\"gender\"\n\t\t\t\t\t\tvalue={gender}\n\t\t\t\t\t\tonChange={onChangeGender}>\n\t\t\t\t\t\t<option value=\"male\">남성</option>\n\t\t\t\t\t\t<option value=\"female\">여성</option>\n\t\t\t\t\t</Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"user_birth\">생일</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\tname=\"birth\"\n\t\t\t\t\t\tonChange={onChangeAge}\n\t\t\t\t\t\trequired></Form.Control>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Check\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tname=\"user-term\"\n\t\t\t\t\t\tvalue={term}\n\t\t\t\t\t\tonChange={onChangeTerm}\n\t\t\t\t\t\tlabel=\"동의 합니까?\"\n\t\t\t\t\t/>\n\t\t\t\t\t{termError && (\n\t\t\t\t\t\t<Alert variant=\"danger\">약관에 동의하셔야 합니다.</Alert>\n\t\t\t\t\t)}\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button type=\"primary\" htmltype=\"submit\">\n\t\t\t\t\t정보수정\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t\t<div style={{marginTop: 10}}>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<Button>홈으로 돌아가기</Button>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</Container>\n\t);\n};\n\nexport default Update;\n","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/DefaultPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Sidebar.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Header.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Footer.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/DefaultHeader.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/DefaultBody.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Sidebar2.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Sidebar1.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/Sidebar3.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/MainPage.js",["216","217","218"],[],"import {Container} from \"react-bootstrap\";\nimport React, {useRef, useState} from 'react';\nimport io from 'socket.io-client';\n\nfunction MainPage(props) {\n\n  const socket = io();\n    const myFaceRef = useRef(null);\n    const muteRef = useRef(null);\n    const cameraRef = useRef(null);\n    const camerasRef = useRef(null);\n    const callRef = useRef(null);\n    const welcomeRef = useRef(null);\n    const welcomeFormRef = useRef(null);\n    const peerFaceRef = useRef(null);\n    const myStreamRef = useRef(null);\n    const [hidden, setHidden] = useState(true);\n    const [welHidden, setWelHidden] = useState(false);\n\n    let myStream;\n    let muted = false;\n    let cameraOff = false;\n    let roomName;\n    let myPeerConnection;\n    let myDataChannel;\n    let peopleInRoom = 1;\n\n    let pcObj = {};\nasync function getCameras() {\n  try {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const cameras = devices.filter((device) => device.kind === \"videoinput\");\n    const currentCamera = myStream.getVideoTracks()[0];\n    cameras.forEach((camera) => {\n      const option = document.createElement(\"option\");\n      option.value = camera.deviceId;\n      option.innerText = camera.label;\n      if (currentCamera.label === camera.label) {\n        option.selected = true;\n      }\n      camerasRef.current.appendChild(option);\n    });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nasync function getMedia(deviceId) {\n  const initialConstrains = {\n    audio: true,\n    video: { facingMode: \"user\" },\n  };\n  const cameraConstraints = {\n    audio: true,\n    video: { deviceId: { exact: deviceId } },\n  };\n  try {\n    myStream = await navigator.mediaDevices.getUserMedia(\n      // deviceId가 있다면 특정 camera로, 없다면 셀프 카메라로 설정\n      deviceId ? cameraConstraints : initialConstrains\n    );\n    myFaceRef.current.srcObject = myStream;\n    if (!deviceId) {\n      await getCameras();\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nfunction handleMuteClick() {\n  myStream\n    .getAudioTracks()\n    .forEach((track) => (track.enabled = !track.enabled));\n  if (!muted) {\n    muteRef.class.innerText = \"Unmute\";\n    muted = true;\n  } else {\n    muteRef.class.innerText = \"Mute\";\n    muted = false;\n  }\n}\nfunction handleCameraClick() {\n  myStream\n    .getVideoTracks()\n    .forEach((track) => (track.enabled = !track.enabled));\n  if (cameraOff) {\n    cameraRef.current.innerText = \"Turn Camera Off\";\n    cameraOff = false;\n  } else {\n    cameraRef.current.innerText = \"Turn Camera On\";\n    cameraOff = true;\n  }\n}\n\nasync function handleCameraChange() {\n  // select 한 camera id를 기준으로 다시 getMedia를 통해 미디어 스트림을 가져옴\n  await getMedia(camerasRef.current.value);\n  if (myPeerConnection) {\n    const videoTrack = myStream.getVideoTracks()[0];\n    const videoSender = myPeerConnection\n      .getSenders()\n      .find((sender) => sender.track.kind === \"video\");\n    videoSender.replaceTrack(videoTrack);\n  }\n}\n\n\n\n\nasync function initCall() {\n  setWelHidden(true);\n  setHidden(false);\n  await getMedia();\n  // myPeerConnection = makeConnection(); // 수정된 부분\n}\n\nasync function handleWelcomeSubmit(event) {\n  event.preventDefault();\n  const input = welcomeFormRef.current.querySelector(\"input\");\n  // await initCall();\n  // await getMedia();\n  // 추후에 닉네임 추가\n\n  if(socket.disconnected) {\n    socket.connect();\n  }\n  socket.emit(\"join_room\", input.value);\n  roomName = input.value;\n  input.value = \"\";\n}\n\n\n\nsocket.on(\"reject_join\", () => {\n  // Paint modal\n  // paintModal(\"Sorry, The room is already full.\");\n\n  // Erase names\n  // const nicknameContainer = document.querySelector(\"#userNickname\");\n  // nicknameContainer.innerText = \"\";\n  roomName = \"\";\n  // nickname = \"\";\n});\n\nsocket.on(\"accept_join\", async (userObjArr) => {\n  await initCall();\n\n  const length = userObjArr.length;\n  if (length === 1) {\n    return;\n  }\n\n  // writeChat(\"Notice!\", NOTICE_CN);\n  for (let i = 0; i < length; ++i) {\n    try {\n      const newPC = createConnection(\n        userObjArr[i].socketId,\n        // userObjArr[i].nickname\n      );\n      const offer = await newPC.createOffer();\n      await newPC.setLocalDescription(offer);\n      socket.emit(\"offer\", offer, userObjArr[i].socketId);\n      // writeChat(`__${userObjArr[i].nickname}__`, NOTICE_CN);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  // writeChat(\"is in the room.\", NOTICE_CN);\n});\n\nsocket.on(\"offer\", async (offer, remoteSocketId) => {\n  try {\n    const newPC = createConnection(remoteSocketId);\n    await newPC.setRemoteDescription(offer);\n    const answer = await newPC.createAnswer();\n    await newPC.setLocalDescription(answer);\n    socket.emit(\"answer\", answer, remoteSocketId);\n    // writeChat(`notice! __${remoteNickname}__ joined the room`, NOTICE_CN);\n  } catch (err) {\n    console.error(err);\n  }\n});\n\nsocket.on(\"answer\", async (answer, remoteSocketId) => {\n  await pcObj[remoteSocketId].setRemoteDescription(answer);\n});\n\nsocket.on(\"ice\", async (ice, remoteSocketId) => {\n  await pcObj[remoteSocketId].addIceCandidate(ice);\n});\n\nsocket.on(\"chat\", (message) => {\n  // writeChat(message);\n});\n\nsocket.on(\"leave_room\", (leavedSocketId) => {\n  // removeVideo(leavedSocketId);\n  // writeChat(`notice! ${nickname} leaved the room.`, NOTICE_CN);\n  // --peopleInRoom;\n  // sortStreams();\n});\n\n// RTC code\n\nfunction createConnection(remoteSocketId) {\n  const myPeerConnection = new RTCPeerConnection({\n    iceServers: [\n      {\n        urls: [\n          \"stun:stun.l.google.com:19302\",\n          \"stun:stun1.l.google.com:19302\",\n          \"stun:stun2.l.google.com:19302\",\n          \"stun:stun3.l.google.com:19302\",\n          \"stun:stun4.l.google.com:19302\",\n        ],\n      },\n    ],\n  });\n  myPeerConnection.addEventListener(\"icecandidate\", (event) => {\n    handleIce(event, remoteSocketId);\n  });\n  myPeerConnection.addEventListener(\"track\", (event) => {\n    handleAddStream(event, remoteSocketId);\n  });\n  // myPeerConnection.addEventListener(\n  //   \"iceconnectionstatechange\",\n  //   handleConnectionStateChange\n  // );\n  myStream //\n    .getTracks()\n    .forEach((track) => myPeerConnection.addTrack(track, myStream));\n\n  pcObj[remoteSocketId] = myPeerConnection;\n\n  ++peopleInRoom;\n  // sortStreams();\n  return myPeerConnection;\n}\n\nfunction handleIce(event, remoteSocketId) {\n  if (event.candidate) {\n    socket.emit(\"ice\", event.candidate, remoteSocketId);\n  }\n}\n\nfunction handleAddStream(event, remoteSocketId) {\n  const peerStream = event.streams[0];\n  paintPeerFace(peerStream, remoteSocketId);\n}\n\nfunction paintPeerFace(peerStream, id) {\n  const streams = myStreamRef.current;\n  let div = document.getElementById(id);\n  if (!div) {\n    div = document.createElement(\"div\");\n    div.id = id;\n    streams.appendChild(div);\n  }\n  const video = div.querySelector(\"video\") || document.createElement(\"video\");\n  video.autoplay = true;\n  video.playsInline = true;\n  video.width = \"400\";\n  video.height = \"400\";\n  video.srcObject = peerStream;\n  div.appendChild(video);\n}\n\n// function sortStreams() {\n//   const streams = document.querySelector(\"#streams\");\n//   const streamArr = streams.querySelectorAll(\"div\");\n//   streamArr.forEach((stream) => (stream.className = `people${peopleInRoom}`));\n// }\n\n  return (\n    <Container>\n      <h1>영상통화</h1>\n      <div className=\"video\">\n        <div>\n            <div id=\"welcome\" ref={welcomeRef} \n                style={{display: welHidden ? \"none\" : \"block\"}}\n            >\n                <form ref={welcomeFormRef}>\n                    <input placeholder=\"room name\" required type=\"text\"/>\n                    <button onClick={handleWelcomeSubmit}>Enter room</button>\n                </form>\n            </div>\n            <div id=\"call\" ref={callRef}\n                style={{ display: hidden ? \"none\" : \"block\" }}\n            >\n                <div id=\"myStream\" ref={myStreamRef}>\n                    <video id=\"myFace\"ref={myFaceRef} autoPlay playsInline width=\"400\" height=\"400\"></video>\n                    <button id=\"mute\" ref={muteRef} onClick={handleMuteClick}>Mute</button>\n                    <button id=\"camera\" ref={cameraRef} onClick={handleCameraClick}>Turn Camera Off</button>\n                    <select id=\"cameras\" ref={camerasRef} onChange={handleCameraChange}></select>\n                    <video id=\"peerFace\" ref={peerFaceRef} autoPlay playsInline width=\"400\" height=\"400\"></video>\n                </div>\n            </div>\n            <button onClick={handleWelcomeSubmit}>teset</button>\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default MainPage;\n\n","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/Login.js",["219"],[],"import React, {useState} from \"react\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport {\n\tContainer,\n\tRow,\n\tCol,\n\tForm,\n\tButton,\n\tNav,\n\tButtonGroup,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst Login = () => {\n\tconst [user_id, setId] = useState(\"\");\n\tconst [user_pw, setPassword] = useState(\"\");\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\tconst history = useNavigate();\n\n\t// axios 임시\n\t/* const onSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const response = await axios.post('http://localhost:8080/user/login', {\n              id,\n              password,\n            });\n      \n            if (response.data.success) {\n              sessionStorage.setItem('user', JSON.stringify(response.data.user));\n              history.push('/');\n            } else {\n              alert('Invalid credentials');\n            }\n          } catch (error) {\n            console.error('Login error:', error);\n            alert(\"로그인 에러!\");\n          }\n    }; */\n\n\t// sessionStorage에 저장된 내용을 storedUser에 저장\n\tconst storedUser = sessionStorage.getItem(\"user\");\n\tlet storedName = \"\";\n\n\tif (storedUser) {\n\t\tconst {user_name} = JSON.parse(storedUser);\n\t\tstoredName = user_name;\n\t}\n\n\tconst onSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (storedUser) {\n\t\t\tconst {user_id: storedId, user_pw: storedPassword} = JSON.parse(storedUser);\n\t\t\tif (user_id === storedId && user_pw === storedPassword) {\n\t\t\t\tsetIsLoggedIn(true);\n\t\t\t\thistory(\"/\");\n\t\t\t} else {\n\t\t\t\talert(\"ID 혹은 비밀번호가 틀립니다.\");\n\t\t\t}\n\t\t} else {\n\t\t\talert(\"해당 사용자가 존재하지 않습니다.\");\n\t\t}\n\t};\n\n\t//로그아웃시 sessionStorage에 저장된 내용 삭제\n\tconst handleLogout = () => {\n\t\tsessionStorage.removeItem(\"user\");\n\t\tsetIsLoggedIn(false);\n\t\thistory(\"/\");\n\t\tsetId(\"\");\n\t\tsetPassword(\"\");\n\t};\n\n\tconst onChangeId = (e) => {\n\t\tsetId(e.target.value);\n\t};\n\n\tconst onChangePassword = (e) => {\n\t\tsetPassword(e.target.value);\n\t};\n\n\treturn (\n\t\t<Container className=\"justify-content-end\">\n\t\t\t{isLoggedIn ? (\n\t\t\t\t<Row className=\"justify-content-end\">\n\t\t\t\t\t<Col xs=\"auto\">\n\t\t\t\t\t\t<div>Hello, {storedName}</div>\n\t\t\t\t\t\t<ButtonGroup className=\"mt-2\">\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={handleLogout} className=\"me-2\">\n\t\t\t\t\t\t\t로그아웃\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Nav>\n\t\t\t\t\t\t\t<Link to=\"/Update\">\n\t\t\t\t\t\t\t\t<Button variant=\"primary\">정보수정</Button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t) : (\n\t\t\t\t<Row className=\"justify-content-end\">\n\t\t\t\t\t<Col xs=\"auto\">\n\t\t\t\t\t\t<Form onSubmit={onSubmit}>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col xs=\"auto\">\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formId\">\n\t\t\t\t\t\t\t\t\t\t<Form.Label>ID :</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"id\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={user_id}\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeId}\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs=\"auto\">\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formPassword\">\n\t\t\t\t\t\t\t\t\t\t<Form.Label>P/W :</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={user_pw}\n\t\t\t\t\t\t\t\t\t\t\tonChange={onChangePassword}\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<ButtonGroup className=\"mt-2\">\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\" className=\"me-5\">\n\t\t\t\t\t\t\t\t\t로그인\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Link to=\"/SignUp\">\n\t\t\t\t\t\t\t\t\t<Button variant=\"primary\">회원가입</Button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n\nexport default Login;\n","/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/ShoppingPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/CommunityPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/pages/LoginPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/react-server/src/components/views/VideoCall.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/index.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/reportWebVitals.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/App.js",["220","221","222","223","224"],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/DefaultPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/LoggedIn.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/SignUp.js",["225"],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/UpdatePage.js",["226","227"],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/CommunityPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/LoginPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/ShoppingPage.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Footer.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Header.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/DefaultHeader.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/DefaultBody.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/pages/MainPage.js",["228","229","230"],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar2.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar3.js",[],[],"/Users/ban-yeongseo/Projects/straight-blue-wave/node-server/src/client/src/components/views/Sidebar1.js",[],[],{"ruleId":"231","severity":1,"message":"232","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"235","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":14},{"ruleId":"231","severity":1,"message":"236","line":5,"column":8,"nodeType":"233","messageId":"234","endLine":5,"endColumn":14},{"ruleId":"231","severity":1,"message":"237","line":6,"column":8,"nodeType":"233","messageId":"234","endLine":6,"endColumn":14},{"ruleId":"231","severity":1,"message":"238","line":7,"column":8,"nodeType":"233","messageId":"234","endLine":7,"endColumn":15},{"ruleId":"231","severity":1,"message":"239","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":13},{"ruleId":"231","severity":1,"message":"240","line":34,"column":24,"nodeType":"233","messageId":"234","endLine":34,"endColumn":32},{"ruleId":"231","severity":1,"message":"241","line":35,"column":24,"nodeType":"233","messageId":"234","endLine":35,"endColumn":36},{"ruleId":"231","severity":1,"message":"242","line":23,"column":9,"nodeType":"233","messageId":"234","endLine":23,"endColumn":17},{"ruleId":"231","severity":1,"message":"243","line":25,"column":9,"nodeType":"233","messageId":"234","endLine":25,"endColumn":22},{"ruleId":"231","severity":1,"message":"244","line":26,"column":9,"nodeType":"233","messageId":"234","endLine":26,"endColumn":21},{"ruleId":"231","severity":1,"message":"239","line":12,"column":8,"nodeType":"233","messageId":"234","endLine":12,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"235","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":14},{"ruleId":"231","severity":1,"message":"236","line":5,"column":8,"nodeType":"233","messageId":"234","endLine":5,"endColumn":14},{"ruleId":"231","severity":1,"message":"237","line":6,"column":8,"nodeType":"233","messageId":"234","endLine":6,"endColumn":14},{"ruleId":"231","severity":1,"message":"238","line":7,"column":8,"nodeType":"233","messageId":"234","endLine":7,"endColumn":15},{"ruleId":"231","severity":1,"message":"239","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":13},{"ruleId":"231","severity":1,"message":"240","line":34,"column":24,"nodeType":"233","messageId":"234","endLine":34,"endColumn":32},{"ruleId":"231","severity":1,"message":"241","line":35,"column":24,"nodeType":"233","messageId":"234","endLine":35,"endColumn":36},{"ruleId":"231","severity":1,"message":"242","line":23,"column":9,"nodeType":"233","messageId":"234","endLine":23,"endColumn":17},{"ruleId":"231","severity":1,"message":"243","line":25,"column":9,"nodeType":"233","messageId":"234","endLine":25,"endColumn":22},{"ruleId":"231","severity":1,"message":"244","line":26,"column":9,"nodeType":"233","messageId":"234","endLine":26,"endColumn":21},"no-unused-vars","'Footer' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Signup' is defined but never used.","'Update' is defined but never used.","'Sidebar' is defined but never used.","'axios' is defined but never used.","'setEmail' is assigned a value but never used.","'setUserClass' is assigned a value but never used.","'roomName' is assigned a value but never used.","'myDataChannel' is defined but never used.","'peopleInRoom' is assigned a value but never used."]